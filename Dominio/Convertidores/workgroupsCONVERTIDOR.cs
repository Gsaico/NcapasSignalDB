//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015/04/19 - 13:28:01
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Dominio.Dtos;
using PersistenciaDatos;

namespace Dominio.Convertidores
{

    /// <summary>
    /// Assembler for <see cref="workgroups"/> and <see cref="workgroupsDTO"/>.
    /// </summary>
    public static partial class workgroupsCONVERTIDOR
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="workgroupsDTO"/> converted from <see cref="workgroups"/>.</param>
        static partial void OnDTO(this workgroups entity, workgroupsDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="workgroups"/> converted from <see cref="workgroupsDTO"/>.</param>
        static partial void OnEntity(this workgroupsDTO dto, workgroups entity);

        /// <summary>
        /// Converts this instance of <see cref="workgroupsDTO"/> to an instance of <see cref="workgroups"/>.
        /// </summary>
        /// <param name="dto"><see cref="workgroupsDTO"/> to convert.</param>
        public static workgroups ToEntity(this workgroupsDTO dto)
        {
            if (dto == null) return null;

            var entity = new workgroups();

            entity.id_workgroup = dto.id_workgroup;
            entity.name_workgroup = dto.name_workgroup;
            entity.create_date = dto.create_date;
            entity.status = dto.status;
            entity.description = dto.description;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="workgroups"/> to an instance of <see cref="workgroupsDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="workgroups"/> to convert.</param>
        public static workgroupsDTO ToDTO(this workgroups entity)
        {
            if (entity == null) return null;

            var dto = new workgroupsDTO();

            dto.id_workgroup = entity.id_workgroup;
            dto.name_workgroup = entity.name_workgroup;
            dto.create_date = entity.create_date;
            dto.status = entity.status;
            dto.description = entity.description;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="workgroupsDTO"/> to an instance of <see cref="workgroups"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<workgroups> ToEntities(this IEnumerable<workgroupsDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="workgroups"/> to an instance of <see cref="workgroupsDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<workgroupsDTO> ToDTOs(this IEnumerable<workgroups> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }
        public static void Actualizar(Dominio.Dtos.workgroupsDTO dto, PersistenciaDatos.workgroups  entity)
        {
            entity.id_workgroup = dto.id_workgroup;
            entity.name_workgroup = dto.name_workgroup;
            entity.create_date = dto.create_date;
            entity.status = dto.status;
            entity.description = dto.description;
        }
    }
}
