//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015/04/19 - 13:28:01
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Dominio.Dtos;
using PersistenciaDatos;

namespace Dominio.Convertidores
{

    /// <summary>
    /// Assembler for <see cref="users_workgroups"/> and <see cref="users_workgroupsDTO"/>.
    /// </summary>
    public static partial class users_workgroupsCONVERTIDOR
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="users_workgroupsDTO"/> converted from <see cref="users_workgroups"/>.</param>
        static partial void OnDTO(this users_workgroups entity, users_workgroupsDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="users_workgroups"/> converted from <see cref="users_workgroupsDTO"/>.</param>
        static partial void OnEntity(this users_workgroupsDTO dto, users_workgroups entity);

        /// <summary>
        /// Converts this instance of <see cref="users_workgroupsDTO"/> to an instance of <see cref="users_workgroups"/>.
        /// </summary>
        /// <param name="dto"><see cref="users_workgroupsDTO"/> to convert.</param>
        public static users_workgroups ToEntity(this users_workgroupsDTO dto)
        {
            if (dto == null) return null;

            var entity = new users_workgroups();

            entity.id_users_workgroups = dto.id_users_workgroups;
            entity.id_workgroup = dto.id_workgroup;
            entity.id_user = dto.id_user;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="users_workgroups"/> to an instance of <see cref="users_workgroupsDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="users_workgroups"/> to convert.</param>
        public static users_workgroupsDTO ToDTO(this users_workgroups entity)
        {
            if (entity == null) return null;

            var dto = new users_workgroupsDTO();

            dto.id_users_workgroups = entity.id_users_workgroups;
            dto.id_workgroup = entity.id_workgroup;
            dto.id_user = entity.id_user;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="users_workgroupsDTO"/> to an instance of <see cref="users_workgroups"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<users_workgroups> ToEntities(this IEnumerable<users_workgroupsDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="users_workgroups"/> to an instance of <see cref="users_workgroupsDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<users_workgroupsDTO> ToDTOs(this IEnumerable<users_workgroups> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

        public static void Actualizar(Dominio.Dtos.users_workgroupsDTO dto, PersistenciaDatos.users_workgroups entity)
        {
            entity.id_users_workgroups = dto.id_users_workgroups;
            entity.id_workgroup = dto.id_workgroup;
            entity.id_user = dto.id_user;

        }
    }
}
